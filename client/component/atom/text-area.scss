@charset "utf-8";

@import "/client/component/mixin.scss";


.root {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.textarea {
  @include input(primary);
  padding: $textarea-vertical-padding $input-horizontal-padding;
  display: block;
  resize: none;
  flex-grow: 1;
  &[data-font="monospace"] {
    @include monospace-font;
  }
  &[data-nowrap] {
    white-space: pre;
    overflow: auto;
  }
}

.code-wrapper {
  @include input(primary);
  margin: 0rpx;
  padding: 0rpx;
  display: flex;
  flex-direction: column;
  &:not([data-fit-height]) {
    flex-grow: 1;
  }
}

.code {
  height: 100%;
  display: block;
  resize: none;
  flex-grow: 1;
  position: relative;
}

.code >div {
  font-family: inherit;
  padding: 0em;
  background: transparent;
  box-sizing: border-box;
  .code-wrapper[data-font="monospace"] & {
    @include monospace-font;
  }
  .code-wrapper:not([data-fit-height]) & {
    height: 100%;
    inset: 0rpx;
    position: absolute;
  }
  .code-wrapper[data-fit-height] & {
    height: auto;
  }
}

.code >div [class~="CodeMirror-lines"] {
  padding-block: $textarea-vertical-padding !important;
} 

.code >div [class~="CodeMirror-line"] {
  padding-inline: $input-horizontal-padding !important;
}

.button-container {
  padding-block: $input-vertical-padding;
  padding-inline: $input-horizontal-padding;
  border-bottom: 1px solid color(border);
  display: flex;
  align-items: center;
  column-gap: $control-vertical-margin;
}

.button-container >button {
  width: 1em;
  text-align: center;
}

.separator {
  width: 0rpx;
  height: 1em;
  border-left: 1px solid color(light-border);
}