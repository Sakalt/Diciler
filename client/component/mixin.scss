@charset "utf-8";

@use "sass:math" as *;
@import "/client/component/function.scss";
@import "/client/component/color.scss";


$root-size: 16px;

$huge-margin: 24rpx;
$large-margin: 16rpx;
$medium-margin: 12rpx;
$small-margin: 8rpx;
$tiny-margin: 4rpx;

$control-vertical-margin: 12rpx;
$control-horizontal-margin: 12rpx;
$small-control-horizontal-margin: 12rpx;
$small-control-vertical-margin: 8rpx;
$paragraph-margin: 12rpx;

$page-width: 1000rpx;
$page-top-margin: 48rpx;
$page-bottom-margin: 48rpx;
$page-horizontal-margin: 40rpx;
$page-small-horizontal-margin: 28rpx;

$box-vertical-padding: 0.125em;
$box-horizontal-padding: 0.5em;
$input-vertical-padding: 0.125em;
$input-horizontal-padding: 0.5em;
$textarea-vertical-padding: 0.25em;
$button-hotizontal-padding: 0.75em;
$tooltip-vertical-padding: 0.25em;
$tooltip-horizontal-padding: 0.5em;

$huge-font-size: 22rpx;
$large-font-size: 19rpx;
$medium-font-size: 16rpx;
$small-font-size: 14rpx;
$tiny-font-size: 12rpx;

$focus-size: 2rpx;
$blank-margin: 0.3em;
$disabled-opacity: 0.4;

$inset-box-shadow-setting: 0rpx 2rpx 3rpx;
$small-border-radius: 3rpx;
$large-border-radius: 5rpx;

$line-height: div(24px, $root-size);
$tooltip-line-height: div(22px, $root-size);

$european-font-family: "Alegreya Sans", "Arial";
$japanese-font-family: "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック体", "YuGothic", "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "ＭＳ Ｐゴシック";
$european-bold-font-family: "Alegreya Sans", "Arial";
$japanese-bold-font-family: "游ゴシック", "Yu Gothic", "游ゴシック体", "YuGothic", "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "ＭＳ Ｐゴシック";
$monospace-font-family: "Inconsolata", "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック体", "YuGothic", "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "ＭＳ ゴシック";
$special-font-family: "Simonetta";
$icon-font-family: "Font Awesome 5 Pro", "Font Awesome 5 Free", "Font Awesome 5 Brands", "FontAwesome";


@mixin smartphone {
  @media screen and (max-width: 900px) {
    @content;
  }
}

@mixin small-screen {
  @media screen and (max-width: 580px) {
    @content;
  }
}

@mixin bold-font {
  font-family: $european-bold-font-family, $japanese-bold-font-family, sans-serif;
  font-weight: bold;
}

@mixin line-height($line-height: $line-height) {
  line-height: $line-height;
  &::before {
    width: 0rpx;
    height: 0rpx;
    margin-block-start: - line-intrusion($line-height);
    display: block;
    content: "";
  }
  &::after {
    width: 0rpx;
    height: 0rpx;
    margin-block-end: - line-intrusion($line-height);
    display: block;
    content: "";
  }
}

@mixin reset-first-margin($directions: top left) {
  @each $direction in $directions {
    $property-name: "margin-" + $direction;
    &:first-child {
      #{$property-name}: 0rpx;
    }
  }
}

@mixin monospace-font {
  font-family: $monospace-font-family, monospace;
  font-size: 95%;
  font-feature-settings: "palt" 0, "pkna" 0;
}

@mixin icon-font {
  font-family: $icon-font-family;
  font-weight: 900;
}

@mixin unordered-list-item($icon, $icon-color, $marker-width) {
  margin-left: $marker-width + $blank-margin;
  text-align: justify;
  &::before {
    @include icon-font;
    width: $marker-width;
    margin-right: $blank-margin;
    margin-left: -$marker-width - $blank-margin;
    color: $icon-color;
    content: $icon;
    display: inline-block;
  }
}

@mixin unordered-list($icon, $icon-color, $marker-width) {
  margin: 0rpx;
  padding: 0rpx;
  list-style-type: none;
  >li {
    @include unordered-list-item($icon, $icon-color, $marker-width);
  }
}

@mixin ordered-list-item($number-color) {
  margin-left: 0.9em + $blank-margin;
  text-align: justify;
  position: relative;
  counter-increment: ordered-list;
  &::before {
    top: 0.5em;
    width: 0.8em * div(100%, 70%);
    height: 0.8em * div(100%, 70%);
    margin-right: $blank-margin * div(100%, 70%);
    margin-left: - (0.9em + $blank-margin) * div(100%, 70%);
    font-size: 70%;
    color: $number-color;
    line-height: 1;
    text-align: center;
    border: 1rpx $number-color solid;
    border-radius: 50%;
    content: counter(ordered-list);
    display: inline-block;
    position: absolute;
  }
}

@mixin ordered-list($number-color) {
  margin: 0rpx;
  padding: 0rpx;
  list-style-type: none;
  >li {
    @include ordered-list-item($number-color);
  }
}

@mixin input($scheme: primary) {
  width: 100%;
  padding-block: $input-vertical-padding;
  padding-inline: $input-horizontal-padding;
  line-height: $line-height;
  text-align: left;
  border: 1rpx solid schemed-color(border, $scheme);
  border-radius: $small-border-radius;
  background-color: color(input-background);
  box-shadow: inset $inset-box-shadow-setting schemed-color(input-box-shadow, $scheme);
  cursor: text;
  outline: none;
  &:focus-within:not(:disabled):not(.disabled) {
    outline: $focus-size solid schemed-color(focus, $scheme);
  }
  &:disabled,
  &.disabled,
  &[data-disabled] {
    opacity: $disabled-opacity;
    cursor: not-allowed;
  }
  & input {
    outline: none;
  }
}

@mixin button($scheme: primary) {
  padding-block: $input-vertical-padding;
  padding-inline: $button-hotizontal-padding;
  color: schemed-color(button-text, $scheme);
  line-height: $line-height;
  text-align: center;
  border: 1rpx solid schemed-color(button-border, $scheme);
  border-radius: $small-border-radius;
  background-color: schemed-color(button-background, $scheme);
  background-image: schemed-color(button-gradient, $scheme);
  white-space: nowrap;
  position: relative;
  cursor: pointer;
  outline: none;
  &:hover:not(:disabled) {
    background-color: schemed-color(hover-button-background, $scheme);
  }
  &:focus:not(:disabled) {
    outline: $focus-size solid schemed-color(focus, $scheme);
  }
  &:active:not(:disabled) {
    background-color: schemed-color(active-button-background, $scheme);
    background-image: none;
    box-shadow: inset $inset-box-shadow-setting schemed-color(active-button-shadow, $scheme);
  }
  &:disabled {
    opacity: $disabled-opacity;
    cursor: not-allowed;
  }
}

@mixin light-button($scheme: primary) {
  padding-block: $input-vertical-padding;
  padding-inline: $button-hotizontal-padding;
  color: schemed-color(light-button-text, $scheme);
  line-height: $line-height;
  text-align: center;
  border: 1rpx solid schemed-color(border, $scheme);
  border-radius: $small-border-radius;
  background-color: schemed-color(light-button-background, $scheme);
  background-image: schemed-color(light-button-gradient, $scheme);
  white-space: nowrap;
  position: relative;
  cursor: pointer;
  outline: none;
  &:hover:not(:disabled) {
    background-color: schemed-color(hover-light-button-background, $scheme);
  }
  &:focus:not(:disabled) {
    outline: $focus-size solid schemed-color(focus, $scheme);
  }
  &:active:not(:disabled) {
    background-color: schemed-color(active-light-button-background, $scheme);
    background-image: none;
    box-shadow: inset $inset-box-shadow-setting schemed-color(active-light-button-shadow, $scheme);
  }
  &:disabled {
    opacity: $disabled-opacity;
  }
  &:disabled:hover {
    cursor: not-allowed;
  }
}

@mixin color-pane($scheme, $hover: false) {
  color: schemed-color(accent, $scheme);
  border: 1rpx solid schemed-color(border, $scheme);
  border-radius: $large-border-radius;
  background-color: schemed-color(background, $scheme);
  @if $hover {
    &:hover {
      background-color: schemed-color(hover-background, $scheme);
    }
  }
}